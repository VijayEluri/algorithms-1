public class TheCoffeeTimeDivTwo {
  public int find(int n, int[] tea) {

    boolean[] served = new boolean[n];
    boolean[] preferTea = new boolean[n];

    for (int i : tea)
      preferTea[i - 1] = true;

    int startFrom = n - 1, minTime = 0, totalServed = 0;
    while (totalServed < n) {
      int time = 47 + 2 * (startFrom + 1);
      boolean servingTea = false;
      if (preferTea[startFrom])
        servingTea = true;

      boolean startFromUpdated = false;
      for (int i = startFrom, servingCount = 7; i >= 0 && servingCount > 0; i--) {
        if (!served[i]) {
          if (preferenceMatches(i, preferTea, servingTea)) {
            servingCount -= 1;
            time += 4;
            served[i] = true;
            totalServed += 1;
          } else {
            if (!startFromUpdated) {
              startFrom = i;
              startFromUpdated = true;
            }
          }
        }
      }
      minTime += time;
    }
    return minTime;
  }


  private boolean preferenceMatches(int i, boolean[] preferTea,
      boolean servingTea) {
    return (preferTea[i] && servingTea) || 
    (!preferTea[i] && !servingTea); 
  }

  // BEGIN KAWIGIEDIT TESTING
  // Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
  private static boolean KawigiEdit_RunTest(int testNum, int p0, int[] p1, boolean hasAnswer, int p2) {
    System.out.print("Test " + testNum + ": [" + p0 + "," + "{");
    for (int i = 0; p1.length > i; ++i) {
      if (i > 0) {
        System.out.print(",");
      }
      System.out.print(p1[i]);
    }
    System.out.print("}");
    System.out.println("]");
    TheCoffeeTimeDivTwo obj;
    int answer;
    obj = new TheCoffeeTimeDivTwo();
    long startTime = System.currentTimeMillis();
    answer = obj.find(p0, p1);
    long endTime = System.currentTimeMillis();
    boolean res;
    res = true;
    System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
    if (hasAnswer) {
      System.out.println("Desired answer:");
      System.out.println("\t" + p2);
    }
    System.out.println("Your answer:");
    System.out.println("\t" + answer);
    if (hasAnswer) {
      res = answer == p2;
    }
    if (!res) {
      System.out.println("DOESN'T MATCH!!!!");
    } else if ((endTime - startTime) / 1000.0 >= 2) {
      System.out.println("FAIL the timeout");
      res = false;
    } else if (hasAnswer) {
      System.out.println("Match :-)");
    } else {
      System.out.println("OK, but is it right?");
    }
    System.out.println("");
    return res;
  }
  public static void main(String[] args) {
    boolean all_right;
    all_right = true;

    int p0;
    int[] p1;
    int p2;

    // ----- test 0 -----
    p0 = 2;
    p1 = new int[]{1};
    p2 = 108;
    all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 1 -----
    p0 = 2;
    p1 = new int[]{2,1};
    p2 = 59;
    all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 2 -----
    p0 = 15;
    p1 = new int[]{1,2,3,4,5,6,7};
    p2 = 261;
    all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 3 -----
    p0 = 47;
    p1 = new int[]{1,10,6,2,4};
    p2 = 891;
    all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
    // ------------------

    if (all_right) {
      System.out.println("You're a stud (at least on the example cases)!");
    } else {
      System.out.println("Some of the test cases had errors.");
    }
  }
  // END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
