package topcoder.srm617;

public class SlimeXSlimonadeTycoon {
  int[] indices;
  int[] deque;
  int size;
  int count;

  public int sell(int[] morning, int[] customers, int stale_limit) {
    indices = new int[2];
    size = stale_limit - 1;
    count = 0;
    deque = new int[size];

    int sold = 0;
    final int n = morning.length;
    for (int i = 0; i < n; i++) {
      final int freshLemonades = morning[i];
      int canSell = customers[i];

      while (!empty() && canSell > 0) {
        final int ol = deque[indices[0]];
        if (ol > canSell) {
          sold += canSell;
          deque[indices[0]] = ol - canSell;
          canSell = 0;
        } else {
          sold += ol;
          remove(); // remove oldest element
          canSell = canSell - ol;
        }
      }

      if (canSell > 0) {
        if (freshLemonades > canSell) {
          sold += canSell;
          add(freshLemonades - canSell);
        } else {
          sold += freshLemonades;
        }
      } else {
        add(freshLemonades);
      }
    }

    return sold;
  }

  private void remove() {
    count -= 1;
    indices[0] += 1;
    if (indices[0] == size) {
      indices[0] = 0;
    }
  }

  private boolean empty() {
    return count == 0;
  }

  private void add(int e) {
    if (size == 0) {
      return;
    }

    if (full()) {
      remove();
    }

    deque[indices[1]] = e;
    indices[1] += 1;
    if (indices[1] == size) {
      indices[1] = 0;
    }
    count += 1;
  }

  private boolean full() {
    return count == size;
  }

  // BEGIN KAWIGIEDIT TESTING
  // Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
  private static boolean KawigiEdit_RunTest(int testNum, int[] p0, int[] p1, int p2, boolean hasAnswer, int p3) {
    System.out.print("Test " + testNum + ": [" + "{");
    for (int i = 0; p0.length > i; ++i) {
      if (i > 0) {
        System.out.print(",");
      }
      System.out.print(p0[i]);
    }
    System.out.print("}" + "," + "{");
    for (int i = 0; p1.length > i; ++i) {
      if (i > 0) {
        System.out.print(",");
      }
      System.out.print(p1[i]);
    }
    System.out.print("}" + "," + p2);
    System.out.println("]");
    SlimeXSlimonadeTycoon obj;
    int answer;
    obj = new SlimeXSlimonadeTycoon();
    final long startTime = System.currentTimeMillis();
    answer = obj.sell(p0, p1, p2);
    final long endTime = System.currentTimeMillis();
    boolean res;
    res = true;
    System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
    if (hasAnswer) {
      System.out.println("Desired answer:");
      System.out.println("\t" + p3);
    }
    System.out.println("Your answer:");
    System.out.println("\t" + answer);
    if (hasAnswer) {
      res = answer == p3;
    }
    if (!res) {
      System.out.println("DOESN'T MATCH!!!!");
    } else if ((endTime - startTime) / 1000.0 >= 2) {
      System.out.println("FAIL the timeout");
      res = false;
    } else if (hasAnswer) {
      System.out.println("Match :-)");
    } else {
      System.out.println("OK, but is it right?");
    }
    System.out.println("");
    return res;
  }

  public static void main(String[] args) {
    boolean all_right;
    all_right = true;

    int[] p0;
    int[] p1;
    int p2;
    int p3;

    // ----- test 0 -----
    p0 = new int[]{5, 1, 1};
    p1 = new int[]{1, 2, 3};
    p2 = 2;
    p3 = 5;
    all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 1 -----
    p0 = new int[]{10, 20, 30};
    p1 = new int[]{30, 20, 10};
    p2 = 1;
    p3 = 40;
    all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 2 -----
    p0 = new int[]{1, 2, 3, 4, 5};
    p1 = new int[]{5, 5, 5, 5, 5};
    p2 = 5;
    p3 = 15;
    all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 3 -----
    p0 = new int[]{10000, 0, 0, 0, 0, 0, 0};
    p1 = new int[]{1, 2, 4, 8, 16, 32, 64};
    p2 = 4;
    p3 = 15;
    all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
    // ------------------

    if (all_right) {
      System.out.println("You're a stud (at least on the example cases)!");
    } else {
      System.out.println("Some of the test cases had errors.");
    }
  }
  // END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
