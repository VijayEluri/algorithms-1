package topcoder.srm507;

import java.util.HashMap;
import java.util.Map;
import java.util.Map.Entry;


public class CubeStickers {
  public String isPossible(String[] stickers) {
    Map<String, Integer> d = new HashMap<String, Integer>();
    for (String s : stickers) {
      if (d.containsKey(s)) {
        d.put(s, d.get(s) + 1);
      } else {
        d.put(s, 1);
      }
    }

    int cnt = 0;
    for (Entry<String, Integer> e : d.entrySet()) {
      if (e.getValue() >= 2) {
        cnt += 2;
      } else {
        cnt += 1;
      }
    }

    if (cnt >= 6) {
      return "YES";
    }
    return "NO";
  }

  // BEGIN KAWIGIEDIT TESTING
  // Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
  private static boolean KawigiEdit_RunTest(int testNum, String[] p0, boolean hasAnswer, String p1) {
    System.out.print("Test " + testNum + ": [" + "{");
    for (int i = 0; p0.length > i; ++i) {
      if (i > 0) {
        System.out.print(",");
      }
      System.out.print("\"" + p0[i] + "\"");
    }
    System.out.print("}");
    System.out.println("]");
    CubeStickers obj;
    String answer;
    obj = new CubeStickers();
    long startTime = System.currentTimeMillis();
    answer = obj.isPossible(p0);
    long endTime = System.currentTimeMillis();
    boolean res;
    res = true;
    System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
    if (hasAnswer) {
      System.out.println("Desired answer:");
      System.out.println("\t" + "\"" + p1 + "\"");
    }
    System.out.println("Your answer:");
    System.out.println("\t" + "\"" + answer + "\"");
    if (hasAnswer) {
      res = answer.equals(p1);
    }
    if (!res) {
      System.out.println("DOESN'T MATCH!!!!");
    } else if ((endTime - startTime) / 1000.0 >= 2) {
      System.out.println("FAIL the timeout");
      res = false;
    } else if (hasAnswer) {
      System.out.println("Match :-)");
    } else {
      System.out.println("OK, but is it right?");
    }
    System.out.println("");
    return res;
  }

  public static void main(String[] args) {
    boolean all_right;
    all_right = true;

    String[] p0;
    String p1;

    // ----- test 0 -----
    p0 = new String[]{"cyan", "magenta", "yellow", "purple", "black", "white", "purple"};
    p1 = "YES";
    all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
    // ------------------

    // ----- test 1 -----
    p0 = new String[]{"blue", "blue", "blue", "blue", "blue", "blue", "blue", "blue", "blue", "blue"};
    p1 = "NO";
    all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
    // ------------------

    // ----- test 2 -----
    p0 = new String[]{"red", "yellow", "blue", "red", "yellow", "blue", "red", "yellow", "blue"};
    p1 = "YES";
    all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
    // ------------------

    // ----- test 3 -----
    p0 = new String[]{"purple", "orange", "orange", "purple", "black", "orange", "purple"};
    p1 = "NO";
    all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
    // ------------------

    // ----- test 4 -----
    p0 = new String[]{"white", "gray", "green", "blue", "yellow", "red", "target", "admin"};
    p1 = "YES";
    all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
    // ------------------

    if (all_right) {
      System.out.println("You're a stud (at least on the example cases)!");
    } else {
      System.out.println("Some of the test cases had errors.");
    }
  }
  // END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
