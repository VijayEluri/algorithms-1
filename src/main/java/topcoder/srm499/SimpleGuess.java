package topcoder.srm499;

public class SimpleGuess {
  public int getMaximum(int[] hints) {
    int max = -1;
    for (int i = 0; i < hints.length; i++) {
      for (int j = 0; j < hints.length; j++) {
        if (i == j) {
          continue;
        }
        int slv = solve(hints[i], hints[j]);
        if (slv > max) {
          max = slv;
        }
      }
    }
    return max;
  }

  private int solve(int a, int b) {
    if ((a + b) % 2 != 0) {
      return 0;
    }
    if ((a - b) % 2 != 0) {
      return 0;
    }

    int x = (a + b) / 2;
    int y = (a - b) / 2;
    return x * y;
  }

  // BEGIN KAWIGIEDIT TESTING
  // Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
  private static boolean KawigiEdit_RunTest(int testNum, int[] p0, boolean hasAnswer, int p1) {
    System.out.print("Test " + testNum + ": [" + "{");
    for (int i = 0; p0.length > i; ++i) {
      if (i > 0) {
        System.out.print(",");
      }
      System.out.print(p0[i]);
    }
    System.out.print("}");
    System.out.println("]");
    SimpleGuess obj;
    int answer;
    obj = new SimpleGuess();
    long startTime = System.currentTimeMillis();
    answer = obj.getMaximum(p0);
    long endTime = System.currentTimeMillis();
    boolean res;
    res = true;
    System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
    if (hasAnswer) {
      System.out.println("Desired answer:");
      System.out.println("\t" + p1);
    }
    System.out.println("Your answer:");
    System.out.println("\t" + answer);
    if (hasAnswer) {
      res = answer == p1;
    }
    if (!res) {
      System.out.println("DOESN'T MATCH!!!!");
    } else if ((endTime - startTime) / 1000.0 >= 2) {
      System.out.println("FAIL the timeout");
      res = false;
    } else if (hasAnswer) {
      System.out.println("Match :-)");
    } else {
      System.out.println("OK, but is it right?");
    }
    System.out.println("");
    return res;
  }

  public static void main(String[] args) {
    boolean all_right;
    all_right = true;

    int[] p0;
    int p1;

    // ----- test 0 -----
    p0 = new int[]{1, 4, 5};
    p1 = 6;
    all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
    // ------------------

    // ----- test 1 -----
    p0 = new int[]{1, 4, 5, 8};
    p1 = 12;
    all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
    // ------------------

    // ----- test 2 -----
    p0 = new int[]{9, 8, 7, 6, 5, 4, 3, 2, 1};
    p1 = 20;
    all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
    // ------------------

    // ----- test 3 -----
    p0 = new int[]{2, 100};
    p1 = 2499;
    all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
    // ------------------

    // ----- test 4 -----
    p0 = new int[]{50, 58, 47, 57, 40};
    p1 = 441;
    all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
    // ------------------

    if (all_right) {
      System.out.println("You're a stud (at least on the example cases)!");
    } else {
      System.out.println("Some of the test cases had errors.");
    }
  }
  // END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
