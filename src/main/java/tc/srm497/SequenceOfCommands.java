package tc.srm497;

import java.util.HashMap;
import java.util.Map;


public class SequenceOfCommands {
  enum Direction {NORTH, EAST, SOUTH, WEST;}

  static Map<Direction, Direction> right = new HashMap<Direction, Direction>();
  static Map<Direction, Direction> left = new HashMap<Direction, Direction>();

  static {
    left.put(Direction.NORTH, Direction.WEST);
    left.put(Direction.EAST, Direction.NORTH);
    left.put(Direction.SOUTH, Direction.EAST);
    left.put(Direction.WEST, Direction.SOUTH);

    right.put(Direction.NORTH, Direction.EAST);
    right.put(Direction.EAST, Direction.SOUTH);
    right.put(Direction.SOUTH, Direction.WEST);
    right.put(Direction.WEST, Direction.NORTH);
  }

  public String whatHappens(String[] commands) {
    int[] coords = new int[2];
    Direction dir = Direction.NORTH;

    for (String element : commands) {
      for (char command : element.toCharArray()) {
        switch (command) {
          case 'S':
            coords = moveForward(coords, dir);
            break;
          case 'L':
            dir = left.get(dir);
            break;
          case 'R':
            dir = right.get(dir);
            break;
        }
      }
    }
    if (dir == Direction.NORTH && (coords[0] != 0 || coords[1] != 0)) {
      return "unbounded";
    } else {
      return "bounded";
    }
  }

  private int[] moveForward(int[] coords, Direction dir) {
    switch (dir) {
      case NORTH:
        coords[1] += 1;
        break;
      case EAST:
        coords[0] += 1;
        break;
      case SOUTH:
        coords[1] -= 1;
        break;
      case WEST:
        coords[0] -= 1;
        break;
    }
    return coords;
  }

  // BEGIN KAWIGIEDIT TESTING
  // Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
  private static boolean KawigiEdit_RunTest(int testNum, String[] p0, boolean hasAnswer, String p1) {
    System.out.print("Test " + testNum + ": [" + "{");
    for (int i = 0; p0.length > i; ++i) {
      if (i > 0) {
        System.out.print(",");
      }
      System.out.print("\"" + p0[i] + "\"");
    }
    System.out.print("}");
    System.out.println("]");
    SequenceOfCommands obj;
    String answer;
    obj = new SequenceOfCommands();
    long startTime = System.currentTimeMillis();
    answer = obj.whatHappens(p0);
    long endTime = System.currentTimeMillis();
    boolean res;
    res = true;
    System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
    if (hasAnswer) {
      System.out.println("Desired answer:");
      System.out.println("\t" + "\"" + p1 + "\"");
    }
    System.out.println("Your answer:");
    System.out.println("\t" + "\"" + answer + "\"");
    if (hasAnswer) {
      res = answer.equals(p1);
    }
    if (!res) {
      System.out.println("DOESN'T MATCH!!!!");
    } else if ((endTime - startTime) / 1000.0 >= 2) {
      System.out.println("FAIL the timeout");
      res = false;
    } else if (hasAnswer) {
      System.out.println("Match :-)");
    } else {
      System.out.println("OK, but is it right?");
    }
    System.out.println("");
    return res;
  }

  public static void main(String[] args) {
    boolean all_right;
    all_right = true;

    String[] p0;
    String p1;

    // ----- test 0 -----
    p0 = new String[]{"S"};
    p1 = "unbounded";
    all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
    // ------------------

    // ----- test 1 -----
    p0 = new String[]{"SRSL"};
    p1 = "unbounded";
    all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
    // ------------------

    // ----- test 2 -----
    p0 = new String[]{"SSSS", "R"};
    p1 = "bounded";
    all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
    // ------------------

    // ----- test 3 -----
    p0 = new String[]{"SRSL", "LLSSSSSSL", "SSSSSS", "L"};
    p1 = "unbounded";
    all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
    // ------------------

    if (all_right) {
      System.out.println("You're a stud (at least on the example cases)!");
    } else {
      System.out.println("Some of the test cases had errors.");
    }
  }
  // END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
