package tc.srm483;

public class MovieSeating {
  public long getSeatings(int numFriends, String[] hall) {
    int[] vacantSeatsPerRow = new int[hall.length];
    int[] vacantSeatsPerCol = new int[hall[0].length()];

    for (int i = 0; i < hall.length; i++) {
      for (int j = 0; j < hall[i].length(); j++) {
        if (hall[i].charAt(j) == '.') {
          vacantSeatsPerRow[i] += 1;
          vacantSeatsPerCol[j] += 1;
        }
      }
    }

    long seatings = 0L;
    if (numFriends == 1) {
      for (int seats : vacantSeatsPerCol) {
        seatings += seats;
      }
      return seatings;
    }

    for (int seats : vacantSeatsPerRow) {
      if (seats >= numFriends) {
        seatings += calc(seats, numFriends);
      }
    }

    for (int seats : vacantSeatsPerCol) {
      if (seats >= numFriends) {
        seatings += calc(seats, numFriends);
      }
    }
    return seatings;
  }

  private long calc(int seats, int numFriends) {
    long ans = 1L;
    for (int i = 0; i < numFriends; i++) {
      ans *= (long) (seats - i);
    }
    return ans;
  }

  // BEGIN KAWIGIEDIT TESTING
  // Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
  private static boolean KawigiEdit_RunTest(int testNum, int p0, String[] p1, boolean hasAnswer, long p2) {
    System.out.print("Test " + testNum + ": [" + p0 + "," + "{");
    for (int i = 0; p1.length > i; ++i) {
      if (i > 0) {
        System.out.print(",");
      }
      System.out.print("\"" + p1[i] + "\"");
    }
    System.out.print("}");
    System.out.println("]");
    MovieSeating obj;
    long answer;
    obj = new MovieSeating();
    long startTime = System.currentTimeMillis();
    answer = obj.getSeatings(p0, p1);
    long endTime = System.currentTimeMillis();
    boolean res;
    res = true;
    System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
    if (hasAnswer) {
      System.out.println("Desired answer:");
      System.out.println("\t" + p2);
    }
    System.out.println("Your answer:");
    System.out.println("\t" + answer);
    if (hasAnswer) {
      res = answer == p2;
    }
    if (!res) {
      System.out.println("DOESN'T MATCH!!!!");
    } else if ((endTime - startTime) / 1000.0 >= 2) {
      System.out.println("FAIL the timeout");
      res = false;
    } else if (hasAnswer) {
      System.out.println("Match :-)");
    } else {
      System.out.println("OK, but is it right?");
    }
    System.out.println("");
    return res;
  }

  public static void main(String[] args) {
    boolean all_right;
    all_right = true;

    int p0;
    String[] p1;
    long p2;

    // ----- test 0 -----
    p0 = 2;
    p1 = new String[]{".#..", ".##.", "...."};
    p2 = 34L;
    all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 1 -----
    p0 = 2;
    p1 = new String[]{"..#", ".##", "..."};
    p2 = 16L;
    all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 2 -----
    p0 = 5;
    p1 = new String[]{"..####..", ".###.##.", ".######.", "#.#.#.#."};
    p2 = 0L;
    all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 3 -----
    p0 = 8;
    p1 = new String[]{"........"};
    p2 = 40320L;
    all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
    // ------------------

    if (all_right) {
      System.out.println("You're a stud (at least on the example cases)!");
    } else {
      System.out.println("Some of the test cases had errors.");
    }
  }
  // END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
