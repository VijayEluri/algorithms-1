package tc.misc;

public class BestApproximationDiv1
{
	public String findFraction(int maxDen, String number)
	{
		int x = (int) Math.pow(10, 6);
		int aa = 0, bb = 0;

		int gcnt = -1;

		for (int b = 1; b <= maxDen; b++) {
			for (int a = 0; a < b; a++) {
				int f = (int) ((a * x) / b);
				String sf = Integer.toString(f);
				String r = sf;
				if (sf.length() > 6) {
					r = sf.substring(0, 7);
				} else {
					String pad = "";
					int p = 6 - sf.length();
					for(int k = 0; k < p; k++)
						pad += "0";
					r = pad + sf;
				}

				int cnt = 0;
				for (int i = 0; i < number.length() - 2; i++) {
					if (r.charAt(i) == number.charAt(i + 2))
						cnt++;
					else
						break;
				}

				
				if (cnt > gcnt) {
					System.out.println(x);
					aa = a;
					bb = b;
					gcnt = cnt;
				}
			}
		}
		gcnt++;
		return aa + "/" + bb + " has " + gcnt + " exact digits"; 
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int p0, String p1, boolean hasAnswer, String p2) {
		System.out.print("Test " + testNum + ": [" + p0 + "," + "\"" + p1 + "\"");
		System.out.println("]");
		BestApproximationDiv1 obj;
		String answer;
		obj = new BestApproximationDiv1();
		long startTime = System.currentTimeMillis();
		answer = obj.findFraction(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + "\"" + p2 + "\"");
		}
		System.out.println("Your answer:");
		System.out.println("\t" + "\"" + answer + "\"");
		if (hasAnswer) {
			res = answer.equals(p2);
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;

		int p0;
		String p1;
		String p2;

		// ----- test 0 -----
		p0 = 42;
		p1 = "0.141592";
		p2 = "1/7 has 3 exact digits";
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 1 -----
		p0 = 3;
		p1 = "0.133700";
		p2 = "0/1 has 1 exact digits";
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 2 -----
		p0 = 1000;
		p1 = "0.123456";
		p2 = "10/81 has 7 exact digits";
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 3 -----
		p0 = 1000;
		p1 = "0.420000";
		p2 = "21/50 has 7 exact digits";
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 4 -----
		p0 = 100;
		p1 = "0.909999";
		p2 = "10/11 has 4 exact digits";
		all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 5 -----
		p0 = 115;
		p1 = "0.141592";
		p2 = "16/113 has 7 exact digits";
		all_right = KawigiEdit_RunTest(5, p0, p1, true, p2) && all_right;
		// ------------------

		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
