package tc.srm499;

import java.util.HashMap;
import java.util.Map;

public class ColorfulRabbits {
  public int getMinimum(int[] replies) {
    Map<Integer, Integer> m = new HashMap<Integer, Integer>(); 
    int sum = 0;

    for (int i = 0; i < replies.length; i++)
      if (m.containsKey(replies[i])) {
        if (m.get(replies[i]) == 0) {
          sum += replies[i] + 1;
          m.put(replies[i], replies[i]);
        } else
          m.put(replies[i], m.get(replies[i]) - 1);
      } else {
        m.put(replies[i], replies[i]);
        sum += replies[i] + 1;
      }

    return sum;
  }

  // BEGIN KAWIGIEDIT TESTING
  // Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
  private static boolean KawigiEdit_RunTest(int testNum, int[] p0, boolean hasAnswer, int p1) {
    System.out.print("Test " + testNum + ": [" + "{");
    for (int i = 0; p0.length > i; ++i) {
      if (i > 0) {
        System.out.print(",");
      }
      System.out.print(p0[i]);
    }
    System.out.print("}");
    System.out.println("]");
    ColorfulRabbits obj;
    int answer;
    obj = new ColorfulRabbits();
    long startTime = System.currentTimeMillis();
    answer = obj.getMinimum(p0);
    long endTime = System.currentTimeMillis();
    boolean res;
    res = true;
    System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
    if (hasAnswer) {
      System.out.println("Desired answer:");
      System.out.println("\t" + p1);
    }
    System.out.println("Your answer:");
    System.out.println("\t" + answer);
    if (hasAnswer) {
      res = answer == p1;
    }
    if (!res) {
      System.out.println("DOESN'T MATCH!!!!");
    } else if ((endTime - startTime) / 1000.0 >= 2) {
      System.out.println("FAIL the timeout");
      res = false;
    } else if (hasAnswer) {
      System.out.println("Match :-)");
    } else {
      System.out.println("OK, but is it right?");
    }
    System.out.println("");
    return res;
  }
  public static void main(String[] args) {
    boolean all_right;
    all_right = true;

    int[] p0;
    int p1;

    // ----- test 0 -----
    p0 = new int[]{1,1,2,2};
    p1 = 5;
    all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
    // ------------------

    // ----- test 1 -----
    p0 = new int[]{0};
    p1 = 1;
    all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
    // ------------------

    // ----- test 2 -----
    p0 = new int[]{2,2,44,2,2,2,444,2,2};
    p1 = 499;
    all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
    // ------------------

    if (all_right) {
      System.out.println("You're a stud (at least on the example cases)!");
    } else {
      System.out.println("Some of the test cases had errors.");
    }
  }
  // END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
