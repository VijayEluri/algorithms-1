package tc.srm512;

import java.util.Arrays;

public class MarbleDecoration {
  public static void main(String[] args) {
    boolean all_right;
    all_right = true;

    int p0;
    int p1;
    int p2;
    int p3;

    // ----- test 0 -----
    p0 = 0;
    p1 = 0;
    p2 = 0;
    p3 = 0;
    all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 1 -----
    p0 = 3;
    p1 = 0;
    p2 = 0;
    p3 = 1;
    all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 2 -----
    p0 = 5;
    p1 = 1;
    p2 = 2;
    p3 = 5;
    all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 3 -----
    p0 = 7;
    p1 = 7;
    p2 = 4;
    p3 = 14;
    all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 4 -----
    p0 = 2;
    p1 = 3;
    p2 = 5;
    p3 = 7;
    all_right = KawigiEdit_RunTest(4, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 5 -----
    p0 = 13;
    p1 = 13;
    p2 = 13;
    p3 = 26;
    all_right = KawigiEdit_RunTest(5, p0, p1, p2, true, p3) && all_right;
    // ------------------

    if (all_right) {
      System.out.println("You're a stud (at least on the example cases)!");
    } else {
      System.out.println("Some of the test cases had errors.");
    }
  }

  // END KAWIGIEDIT TESTING

  // BEGIN KAWIGIEDIT TESTING
  // Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
  private static boolean KawigiEdit_RunTest(int testNum, int p0, int p1, int p2, boolean hasAnswer, int p3) {
    System.out.print("Test " + testNum + ": [" + p0 + "," + p1 + "," + p2);
    System.out.println("]");
    MarbleDecoration obj;
    int answer;
    obj = new MarbleDecoration();
    final long startTime = System.currentTimeMillis();
    answer = obj.maxLength(p0, p1, p2);
    final long endTime = System.currentTimeMillis();
    boolean res;
    res = true;
    System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
    if (hasAnswer) {
      System.out.println("Desired answer:");
      System.out.println("\t" + p3);
    }
    System.out.println("Your answer:");
    System.out.println("\t" + answer);
    if (hasAnswer) {
      res = answer == p3;
    }
    if (!res) {
      System.out.println("DOESN'T MATCH!!!!");
    } else if ((endTime - startTime) / 1000.0 >= 2) {
      System.out.println("FAIL the timeout");
      res = false;
    } else if (hasAnswer) {
      System.out.println("Match :-)");
    } else {
      System.out.println("OK, but is it right?");
    }
    System.out.println("");
    return res;
  }

  public int maxLength(int R, int G, int B) {
    int[] nos = new int[] {R, G, B};
    Arrays.sort(nos);
    int largest = nos[2];
    int secondLargest = nos[1];
    if (largest - secondLargest <= 1)
      return largest + secondLargest;
    return 2 * secondLargest + 1;
  }
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
