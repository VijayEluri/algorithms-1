package tc.srm502;

public class TheCowDivTwo {
  private int N;
  private int K;
  long[][][] cache;
  long[][][] table;
  boolean[][][] solved;

  public int find(int _N, int _K) {
    N = _N;
    K = _K;
    cache = new long[N + 1][N][K + 1];
    table = new long[N + 1][K + 1][N];
    solved = new boolean[N + 1][N][K + 1];
    //return (int) (f(0, 0, K) % 1000000007);
    return (int) (f_iterative() % 1000000007);
  }

  private long f(int n, int s, int k) {
    if (k == 0) return s == 0 ? 1 : 0;
    if (n >= N) return 0;

    if (solved[n][s][k])
      return cache[n][s][k];

    cache[n][s][k] = f(n + 1, (s + n) % N, k - 1) + f(n + 1, s, k);
    solved[n][s][k] = true;
    return cache[n][s][k];
  }

  private long f_iterative() {
    for (int n = N - 1; n >= 0; n--)
      for (int k = 0; k <= K; k++) 
        for (int s = N - 1; s >= 0; s--) {
          if (k == 0)
            table[n][k][s] = s == 0 ? 1 : 0;
          else
            table[n][k][s] = table[n + 1][k - 1][(s + n) % N] + table[n + 1][k][s];
        }
    return table[0][K][0]; 
  }

  // Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
  private static boolean KawigiEdit_RunTest(int testNum, int p0, int p1, boolean hasAnswer, int p2) {
    System.out.print("Test " + testNum + ": [" + p0 + "," + p1);
    System.out.println("]");
    TheCowDivTwo obj;
    int answer;
    obj = new TheCowDivTwo();
    long startTime = System.currentTimeMillis();
    answer = obj.find(p0, p1);
    long endTime = System.currentTimeMillis();
    boolean res;
    res = true;
    System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
    if (hasAnswer) {
      System.out.println("Desired answer:");
      System.out.println("\t" + p2);
    }
    System.out.println("Your answer:");
    System.out.println("\t" + answer);
    if (hasAnswer) {
      res = answer == p2;
    }
    if (!res) {
      System.out.println("DOESN'T MATCH!!!!");
    } else if ((endTime - startTime) / 1000.0 >= 2) {
      System.out.println("FAIL the timeout");
      res = false;
    } else if (hasAnswer) {
      System.out.println("Match :-)");
    } else {
      System.out.println("OK, but is it right?");
    }
    System.out.println("");
    return res;
  }
  public static void main(String[] args) {
    boolean all_right;
    all_right = true;

    int p0;
    int p1;
    int p2;

    // ----- test 0 -----
    p0 = 7;
    p1 = 4;
    p2 = 5;
    all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 1 -----
    p0 = 1;
    p1 = 1;
    p2 = 1;
    all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 2 -----
    p0 = 58;
    p1 = 4;
    p2 = 7322;
    all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 3 -----
    p0 = 502;
    p1 = 7;
    p2 = 704466492;
    all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 4 -----
    p0 = 1000;
    p1 = 47;
    p2 = 219736903;
    all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
    // ------------------

    if (all_right) {
      System.out.println("You're a stud (at least on the example cases)!");
    } else {
      System.out.println("Some of the test cases had errors.");
    }
  }
  // END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
