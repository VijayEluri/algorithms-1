public class Zoo {
  public static void main(String[] args) {
    boolean all_right;
    all_right = true;

    int[] p0;
    long p1;

    // ----- test 0 -----
    p0 = new int[] { 0, 1, 2, 3, 4 };
    p1 = 2L;
    all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
    // ------------------

    // ----- test 1 -----
    p0 = new int[] { 5, 8 };
    p1 = 0L;
    all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
    // ------------------

    // ----- test 2 -----
    p0 = new int[] { 0, 0, 0, 0, 0, 0 };
    p1 = 0L;
    all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
    // ------------------

    // ----- test 3 -----
    p0 = new int[] { 1, 0, 2, 0, 1 };
    p1 = 8L;
    all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
    // ------------------

    // ----- test 4 -----
    p0 = new int[] { 1, 0, 1 };
    p1 = 0L;
    all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
    // ------------------

    if (all_right) {
      System.out.println("You're a stud (at least on the example cases)!");
    } else {
      System.out.println("Some of the test cases had errors.");
    }
  }

  // END KAWIGIEDIT TESTING

  // BEGIN KAWIGIEDIT TESTING
  // Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
  private static boolean KawigiEdit_RunTest(int testNum, int[] p0, boolean hasAnswer, long p1) {
    System.out.print("Test " + testNum + ": [" + "{");
    for (int i = 0; p0.length > i; ++i) {
      if (i > 0) {
        System.out.print(",");
      }
      System.out.print(p0[i]);
    }
    System.out.print("}");
    System.out.println("]");
    Zoo obj;
    long answer;
    obj = new Zoo();
    final long startTime = System.currentTimeMillis();
    answer = obj.theCount(p0);
    final long endTime = System.currentTimeMillis();
    boolean res;
    res = true;
    System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
    if (hasAnswer) {
      System.out.println("Desired answer:");
      System.out.println("\t" + p1);
    }
    System.out.println("Your answer:");
    System.out.println("\t" + answer);
    if (hasAnswer) {
      res = answer == p1;
    }
    if (!res) {
      System.out.println("DOESN'T MATCH!!!!");
    } else if ((endTime - startTime) / 1000.0 >= 2) {
      System.out.println("FAIL the timeout");
      res = false;
    } else if (hasAnswer) {
      System.out.println("Match :-)");
    } else {
      System.out.println("OK, but is it right?");
    }
    System.out.println("");
    return res;
  }

  public long theCount(int[] answers) {
    int count = 0;
    for (int i = 0; i <= answers.length; i++)
      count += count(i, answers);
    return count;
  }

  private int count(int noOfRabbits, int[] answers) {
    int noOfcats = answers.length - noOfRabbits;
    
    return 0;
  }
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
