public class FixedSizeSums {
  int [][][] s;
  boolean notFound = false;

  public String kthElement(int sum, int count, int index) {
    s = new int[sum + 1][count + 1][sum + 1];
    for (int i = 1; i <= sum; i++)
      s[i][1][i] = 1;

    for (int i = 1; i <= sum - count + 1; i++) 
      for (int j = 2; j <= count; j++)
        for (int k = i; k <= sum; k++)
          for (int l = 1; l <= i; l++)
            s[i][j][k] += s[l][j-1][k-i];

    String ans = find(index + 1, count, sum - count + 1, sum);
    if (!ans.equals(""))
      return sum + "=" + ans;
    return ans;
  }

  private String find(int kth, int count, int startFrom, int sum) {
    if (count == 1) {
      if (kth > 1)
        return "";
      return String.valueOf(sum);
    }

    for (int i = startFrom; i >= 1; i--)
      if (s[i][count][sum] >= kth)
        return i + "+" + find(s[i][count][sum] - kth, count - 1, i, sum - i);
      else
        kth -= s[i][count][sum];

    notFound = true;
    return "";
  }

  // BEGIN KAWIGIEDIT TESTING
  // Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
  private static boolean KawigiEdit_RunTest(int testNum, int p0, int p1, int p2, boolean hasAnswer, String p3) {
    System.out.print("Test " + testNum + ": [" + p0 + "," + p1 + "," + p2);
    System.out.println("]");
    FixedSizeSums obj;
    String answer;
    obj = new FixedSizeSums();
    long startTime = System.currentTimeMillis();
    answer = obj.kthElement(p0, p1, p2);
    long endTime = System.currentTimeMillis();
    boolean res;
    res = true;
    System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
    if (hasAnswer) {
      System.out.println("Desired answer:");
      System.out.println("\t" + "\"" + p3 + "\"");
    }
    System.out.println("Your answer:");
    System.out.println("\t" + "\"" + answer + "\"");
    if (hasAnswer) {
      res = answer.equals(p3);
    }
    if (!res) {
      System.out.println("DOESN'T MATCH!!!!");
    } else if ((endTime - startTime) / 1000.0 >= 2) {
      System.out.println("FAIL the timeout");
      res = false;
    } else if (hasAnswer) {
      System.out.println("Match :-)");
    } else {
      System.out.println("OK, but is it right?");
    }
    System.out.println("");
    return res;
  }
  public static void main(String[] args) {
    boolean all_right;
    all_right = true;

    int p0;
    int p1;
    int p2;
    String p3;

    // ----- test 0 -----
    p0 = 73;
    p1 = 16;
    p2 = 123456;
    p3 = "8=4+3+1";
    all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 1 -----
    p0 = 13;
    p1 = 1;
    p2 = 0;
    p3 = "13=13";
    all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 2 -----
    p0 = 13;
    p1 = 13;
    p2 = 0;
    p3 = "13=1+1+1+1+1+1+1+1+1+1+1+1+1";
    all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 3 -----
    p0 = 7;
    p1 = 10;
    p2 = 3;
    p3 = "";
    all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 4 -----
    p0 = 17;
    p1 = 2;
    p2 = 4;
    p3 = "17=12+5";
    all_right = KawigiEdit_RunTest(4, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 5 -----
    p0 = 140;
    p1 = 17;
    p2 = 87654321;
    p3 = "140=40+31+15+15+9+7+4+4+2+2+2+2+2+2+1+1+1";
    all_right = KawigiEdit_RunTest(5, p0, p1, p2, true, p3) && all_right;
    // ------------------

    if (all_right) {
      System.out.println("You're a stud (at least on the example cases)!");
    } else {
      System.out.println("Some of the test cases had errors.");
    }
  }
  // END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
