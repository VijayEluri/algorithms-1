
public class FastPostman {
  public int minTime(int[] address, int[] maxTime, int initialPos) {
    int len = address.length;
    int[][][] s = new int[len+1][len][len];  // s[l][i][j] == min time taken when, with using l elements, address[i] is the last to which the mail
                                       //               was delivered and for which address[j] was not used.

    for (int i = 0; i < len; i++) {
      int timeTaken = Math.abs(address[i] - initialPos);
      if (timeTaken <= maxTime[i])
        for (int j = 0; j < len; j++ ) {
          if (i == j)
            s[1][i][j] = -1;
          else
            s[1][i][j] = timeTaken;
        }
      else
        for (int j = 0; j < len; j++)
          s[1][i][j] = -1;
    }
    
    for (int l = 2; l <= len; l++)
      for (int i = 0; i < len; i++) {
        for (int j = 0; j < len; j++) {
          
        }
      }
  

    int minTime = Integer.MAX_VALUE;
    for (int i = 0; i < len; i++)
      if (s[len][i][i] != -1 && s[len][i][i] < minTime)
        minTime = s[len][i][i];

    return minTime == Integer.MAX_VALUE ? -1 : minTime; 
  }

  // BEGIN KAWIGIEDIT TESTING
  // Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
  private static boolean KawigiEdit_RunTest(int testNum, int[] p0, int[] p1, int p2, boolean hasAnswer, int p3) {
    System.out.print("Test " + testNum + ": [" + "{");
    for (int i = 0; p0.length > i; ++i) {
      if (i > 0) {
        System.out.print(",");
      }
      System.out.print(p0[i]);
    }
    System.out.print("}" + "," + "{");
    for (int i = 0; p1.length > i; ++i) {
      if (i > 0) {
        System.out.print(",");
      }
      System.out.print(p1[i]);
    }
    System.out.print("}" + "," + p2);
    System.out.println("]");
    FastPostman obj;
    int answer;
    obj = new FastPostman();
    long startTime = System.currentTimeMillis();
    answer = obj.minTime(p0, p1, p2);
    long endTime = System.currentTimeMillis();
    boolean res;
    res = true;
    System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
    if (hasAnswer) {
      System.out.println("Desired answer:");
      System.out.println("\t" + p3);
    }
    System.out.println("Your answer:");
    System.out.println("\t" + answer);
    if (hasAnswer) {
      res = answer == p3;
    }
    if (!res) {
      System.out.println("DOESN'T MATCH!!!!");
    } else if ((endTime - startTime) / 1000.0 >= 2) {
      System.out.println("FAIL the timeout");
      res = false;
    } else if (hasAnswer) {
      System.out.println("Match :-)");
    } else {
      System.out.println("OK, but is it right?");
    }
    System.out.println("");
    return res;
  }
  public static void main(String[] args) {
    boolean all_right;
    all_right = true;

    int[] p0;
    int[] p1;
    int p2;
    int p3;

    // ----- test 0 -----
    p0 = new int[]{1,3,5,7};
    p1 = new int[]{9,2,5,100};
    p2 = 4;
    p3 = 13;
    all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 1 -----
    p0 = new int[]{1,5};
    p1 = new int[]{6,2};
    p2 = 3;
    p3 = 6;
    all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 2 -----
    p0 = new int[]{1000000};
    p1 = new int[]{45634};
    p2 = 876;
    p3 = -1;
    all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 3 -----
    p0 = new int[]{1,7,10,4};
    p1 = new int[]{15,6,28,39};
    p2 = 2;
    p3 = 20;
    all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 4 -----
    p0 = new int[]{1000000,1000000,1000000,1000000};
    p1 = new int[]{563,23452,32426,1};
    p2 = 1000000;
    p3 = 0;
    all_right = KawigiEdit_RunTest(4, p0, p1, p2, true, p3) && all_right;
    // ------------------

    if (all_right) {
      System.out.println("You're a stud (at least on the example cases)!");
    } else {
      System.out.println("Some of the test cases had errors.");
    }
  }
  // END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
