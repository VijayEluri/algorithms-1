public class TheTicketsDivTwo {
  private int k;

  public double find(int n, int m, int k) {
    this.k = k;
    return solve(n, m, k);
  }

  private double solve(int n, int m, int k) {
    if (n == 1) {
      if (m == 1)
        return 1;
      return 0;
    }
    
    if (k < m)
      return 0;
    
    double ans = 0.0;
    if (m == 1)
      ans = 1/6.0;
    
    for (int i = m - 1; i >= 0; i--)
      ans *= 5/6.0; 

    ans += 1/6.0;
    ans += solve(n - m + 1, n - m + 1, k);
    return ans;
  }

  // BEGIN KAWIGIEDIT TESTING
  // Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
  private static boolean KawigiEdit_RunTest(int testNum, int p0, int p1, int p2, boolean hasAnswer, double p3) {
    System.out.print("Test " + testNum + ": [" + p0 + "," + p1 + "," + p2);
    System.out.println("]");
    TheTicketsDivTwo obj;
    double answer;
    obj = new TheTicketsDivTwo();
    final long startTime = System.currentTimeMillis();
    answer = obj.find(p0, p1, p2);
    final long endTime = System.currentTimeMillis();
    boolean res;
    res = true;
    System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
    if (hasAnswer) {
      System.out.println("Desired answer:");
      System.out.println("\t" + p3);
    }
    System.out.println("Your answer:");
    System.out.println("\t" + answer);
    if (hasAnswer) {
      res = Math.abs(p3 - answer) <= 1e-9 * Math.max(1.0, Math.abs(p3));
    }
    if (!res) {
      System.out.println("DOESN'T MATCH!!!!");
    } else if ((endTime - startTime) / 1000.0 >= 2) {
      System.out.println("FAIL the timeout");
      res = false;
    } else if (hasAnswer) {
      System.out.println("Match :-)");
    } else {
      System.out.println("OK, but is it right?");
    }
    System.out.println("");
    return res;
  }

  public static void main(String[] args) {
    boolean all_right;
    all_right = true;

    int p0;
    int p1;
    int p2;
    double p3;

    // ----- test 0 -----
    p0 = 2;
    p1 = 1;
    p2 = 1;
    p3 = 0.16666666666666666D;
    all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 1 -----
    p0 = 2;
    p1 = 1;
    p2 = 2;
    p3 = 0.5833333333333334D;
    all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 2 -----
    p0 = 7;
    p1 = 7;
    p2 = 4;
    p3 = 0.0D;
    all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 3 -----
    p0 = 4;
    p1 = 2;
    p2 = 10;
    p3 = 0.25264033564814814D;
    all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
    // ------------------

    if (all_right) {
      System.out.println("You're a stud (at least on the example cases)!");
    } else {
      System.out.println("Some of the test cases had errors.");
    }
  }
  // END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
