import java.util.Arrays;
import java.util.HashSet;
import java.util.Set;

// Single Round Match 264 Round 1 - Division II, Level Three

public class SetMetric {
  public int nearness(int[] target, int[] candidate) {
    Set<Integer> usedI = new HashSet<Integer>();
    Set<Integer> usedJ = new HashSet<Integer>();

    int minSum = 0;
    Arrays.sort(target);
    Arrays.sort(candidate);
    for (int cnt = 0; cnt < target.length; cnt++) {
      int minI = -1;
      int minJ = -1;
      int sum = Integer.MAX_VALUE;
      for (int i = 0; i < target.length; i++) {
        if (usedI.contains(i))
          continue;
        for (int j = i; j < candidate.length; j++) {
          if (usedJ.contains(j))
            continue;
          int _sum = Math.abs(target[i] - candidate[j]);
          if (_sum < sum) {
            sum = _sum;
            minI = i;
            minJ = j;
          }
        }
      }
      minSum += sum;
      usedI.add(minI);
      usedJ.add(minJ);
    }
    return minSum;
  }

  // BEGIN KAWIGIEDIT TESTING
  // Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
  private static boolean KawigiEdit_RunTest(int testNum, int[] p0, int[] p1, boolean hasAnswer, int p2) {
    System.out.print("Test " + testNum + ": [" + "{");
    for (int i = 0; p0.length > i; ++i) {
      if (i > 0) {
        System.out.print(",");
      }
      System.out.print(p0[i]);
    }
    System.out.print("}" + "," + "{");
    for (int i = 0; p1.length > i; ++i) {
      if (i > 0) {
        System.out.print(",");
      }
      System.out.print(p1[i]);
    }
    System.out.print("}");
    System.out.println("]");
    SetMetric obj;
    int answer;
    obj = new SetMetric();
    long startTime = System.currentTimeMillis();
    answer = obj.nearness(p0, p1);
    long endTime = System.currentTimeMillis();
    boolean res;
    res = true;
    System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
    if (hasAnswer) {
      System.out.println("Desired answer:");
      System.out.println("\t" + p2);
    }
    System.out.println("Your answer:");
    System.out.println("\t" + answer);
    if (hasAnswer) {
      res = answer == p2;
    }
    if (!res) {
      System.out.println("DOESN'T MATCH!!!!");
    } else if ((endTime - startTime) / 1000.0 >= 2) {
      System.out.println("FAIL the timeout");
      res = false;
    } else if (hasAnswer) {
      System.out.println("Match :-)");
    } else {
      System.out.println("OK, but is it right?");
    }
    System.out.println("");
    return res;
  }
  public static void main(String[] args) {
    boolean all_right;
    all_right = true;

    int[] p0;
    int[] p1;
    int p2;



    // ----- test 0 -----
    p0 = new int[]{15, 25};
    p1 = new int[]{9, 20, 32};
    p2 = 11;
    all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 1 -----
    p0 = new int[]{0};
    p1 = new int[]{1000,-1000,0};
    p2 = 0;
    all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 2 -----
    p0 = new int[]{1000,-1000,0,5,289,-40};
    p1 = new int[]{30,821,-777,-52,91,444,-134,85};
    p2 = 679;
    all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
    // ------------------

    if (all_right) {
      System.out.println("You're a stud (at least on the example cases)!");
    } else {
      System.out.println("Some of the test cases had errors.");
    }
  }
  // END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
